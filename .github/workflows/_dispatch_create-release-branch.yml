# IMPORTANT - any changes to workflow with trigger event "workflow_dispatch" requires to push changes to default
# branch first (eg. "develop" branch) to take effect. This concerns all github-scripts which are used in such workflow.
# More details - https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch


# More details about config - https://github.com/conventional-changelog/standard-version/issues/635
# https://github.com/conventional-changelog/conventional-changelog-config-spec/blob/master/versions/2.1.0/README.md
# https://keepachangelog.com/en/1.0.0/


name: 'Bump version, create release branch (dispatch)'

on:
  workflow_dispatch:
    inputs:
      # Input name must be consistent with input name in GitHub API call "github.rest.actions.createWorkflowDispatch"
      # (scripts/ci/github-script-src/utils/issue-comment.js)
      versionName:
        description: 'Release version (must fit to Semantic Versioning)'
        required: false
        default: ''
        type: string

      firstRelease:
        description: 'First release (rebuild CHANGELOG.md from scratch)'
        required: true
        default: false
        type: boolean

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: 'Setup Node.js'
        uses: actions/setup-node@v2
        with:
          node-version: 17

      - name: 'Check out code'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Initialize mandatory git config'
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: 'Change version number and name with passed value'
        if: github.event.inputs.versionName != '' && github.event.inputs.firstRelease == 'false'
        run: npx standard-version --release-as ${{ github.event.inputs.versionName }} -t "v"

      - name: 'Automatic bumping version number and name'
        if: github.event.inputs.versionName == '' && github.event.inputs.firstRelease == 'false'
        run: npx standard-version -t "v"

      - name: 'Create first release'
        if: github.event.inputs.firstRelease == 'true'
        run: npx standard-version --first-release -t "v"

      - name: 'Get new bumped version from package.json'
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Edit Toml
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: ".cz.toml"
          key: "version"
          value: ${{ steps.package-version.outputs.current-version }}

      - name: Create changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog_increment_filename: RELEASE_NOTES.md
          push: false
          commit: false

      - name: 'Stash updated release files'
        run: git stash

      - name: 'Create release branch'
        run: git checkout -b release/v${{ steps.package-version.outputs.current-version }}

      - name: 'Apply stashed release files into new release branch'
        run: git stash pop

      - name: 'Commit changelog and package.json files'
        id: make-commit
        run: |
          git add package.json
          git add CHANGELOG.md
          git add RELEASE_NOTES.md
          git commit --message "Prepare release ${{ steps.package-version.outputs.current-version }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: 'Push new branch'
        run: git push origin release/v${{ steps.package-version.outputs.current-version }} --tags

      - name: Create pull request into main
        uses: thomaseizinger/create-pull-request@1.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          head: release/v${{ steps.package-version.outputs.current-version }}
          base: main
          title: v${{ steps.package-version.outputs.current-version }} into main
          reviewers: ${{ github.event.issue.user.login }}
          body: |
            This PR was created in response Release workflow running.
            I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.

      - name: Create pull request to develop
        uses: thomaseizinger/create-pull-request@1.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          head: release/v${{ steps.package-version.outputs.current-version }}
          base: develop
          title: v${{ steps.package-version.outputs.current-version }} into develop
          reviewers: ${{ github.event.issue.user.login }}
          body: |
            This PR was created in response Release workflow running.
            I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.
