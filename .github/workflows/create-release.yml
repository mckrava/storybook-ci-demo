# Create release regarding application version which is mentioned in package.json file.
# Release notes will be extracted from CHANGELOG.md file for this particular release.

name: 'Release :: Create'

on:
#  pull_request:
#    branches:
#      - main
#    types: [ closed ]


jobs:
  create:
    name: 'Create release'
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v2

      # Set default git config with credentials of default GitHub Actions account.
      # More options are explained here - https://github.com/actions/checkout/issues/13#issuecomment-724415212
      - name: 'Initialize git config'
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: 'Extract app version'
        id: package-version
        uses: Saionaro/extract-package-version@v1.0.6

      # Extract release notes from CHANGELOG.md for specific version with mckrava/standard-version-release-notes@v1.1.0
      # (https://github.com/marketplace/actions/get-release-notes-from-standard-version-changelog)
      - name: 'Get release notes'
        id: generate_release_notes
        uses: mckrava/standard-version-release-notes@v1.1.0
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          changelog: CHANGELOG.md

      - name: 'Create Release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          release_name: v${{ steps.package-version.outputs.version }}
          body: ${{join(fromJson(steps.generate_release_notes.outputs.notes).notes, '')}}
          draft: false
          prerelease: false
